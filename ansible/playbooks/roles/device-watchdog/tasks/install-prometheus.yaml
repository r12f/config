---
- name: Get all node names in monitor groups
  tags: [always, watchdog]
  include_tasks:
    file: roles/utils/hosts/tasks/get-host-with-filters.yaml
    apply: { tags: [always, watchdog] }
  vars:
    group: "{{ monitor.host_group }}"

- name: Get all node exporter addresses for scraping
  tags: [always, watchdog]
  set_fact:
    all_node_exporter_targets: "{{ all_node_exporter_targets | default([]) + [ { 'targets': [ hostvars[item]['monitor_endpoints']['node'] | default(hostvars[item]['ansible_host'] | default(item) + ':9100') ], 'labels': { 'node_name': item | replace('_', '-') } } ] }}"
  loop: "{{ host_names }}"
  when: not (hostvars[item]['monitor_stack_disabled'] | default(false))

# If we don't stop node exporter, the prometheus role will fail due to user being already in use
- name: Stop node exporter
  tags: watchdog
  service:
    name: node_exporter
    state: stopped

- name: Install prometheus
  tags: watchdog
  import_role:
    name: prometheus.prometheus.prometheus
  vars:
    prometheus_global:
      scrape_interval: 60s
      scrape_timeout: 10s
      evaluation_interval: 15s
    prometheus_agent_mode: true
    prometheus_targets:
      node: "{{ all_node_exporter_targets }}"
    prometheus_scrape_configs:
      - job_name: "prometheus"
        metrics_path: "{{ prometheus_metrics_path }}"
        static_configs:
          - targets:
              - "{{ ansible_fqdn | default(ansible_host) | default('localhost') }}:9090"
      - job_name: "node"
        file_sd_configs:
          - files:
              - "{{ prometheus_config_dir }}/file_sd/node.yml"
        relabel_configs:
          - source_labels: [ node_name ]
            target_label: instance
            action: replace
    prometheus_remote_write:
      - url: "{{ secrets.prometheus.remote_write_url }}"
        basic_auth:
          username: "{{ secrets.prometheus.remote_write_username }}"
          password: "{{ secrets.prometheus.remote_write_api_key }}"

- name: Start node exporter after install
  tags: watchdog
  service:
    name: node_exporter
    state: started
