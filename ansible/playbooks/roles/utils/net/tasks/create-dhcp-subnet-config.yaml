---
- name: Init variables for getting interfaces
  ansible.builtin.set_fact:
    all_net_ifs: []
    net_ifs_in_subnet: []
  loop: "{{ groups[subnet_item.machine_group] }}"

- name: Get all hosts with interfaces
  ansible.builtin.set_fact:
    all_net_ifs: "{{ all_net_ifs + hostvars[item]['net_ifs'] | default([]) | map('combine', { 'host_name': item | replace('_', '-') }) }}"
  loop: "{{ groups[subnet_item.machine_group] }}"

- name: "Get all network interfaces in subnet: {{ subnet_item.name }}"
  ansible.builtin.set_fact:
    net_ifs_in_subnet: "{{ net_ifs_in_subnet + [ item ] }}"
  loop: "{{ all_net_ifs }}"
  when: item.subnet is defined and item.subnet == subnet_item.name

- name: "Deploy dnsmasq configuration for subnet: {{ subnet_item.name }}"
  template:
    src: dnsmasq.dhcp.conf.j2
    dest: "/etc/dnsmasq.d/dhcp.{{ subnet_item.name }}.conf"
