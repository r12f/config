---
- name: Check docker exists
  tags: [ package, docker ]
  become: false
  shell: command -v docker >/dev/null 2>&1
  register: is_docker_exists 
  ignore_errors: true

- name: Install docker repository
  tags: [ package, docker ]
  when: is_docker_exists.rc != 0 and location != "mainland"
  ansible.builtin.shell: |
    sudo install -m 0755 -d /etc/apt/keyrings
    curl -fsSL https://download.docker.com/linux/{{ ansible_facts["lsb"]["id"] | lower }}/gpg | sudo gpg --dearmor --yes -o /etc/apt/keyrings/docker.gpg
    sudo chmod a+r /etc/apt/keyrings/docker.gpg

    echo "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/{{ ansible_facts["lsb"]["id"] | lower }} {{ ansible_facts["lsb"]["codename"] }} stable" | \
        sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
  args:
    executable: /bin/bash

- name: Install docker repository
  tags: [ package, docker ]
  when: is_docker_exists.rc != 0 and location == "mainland"
  ansible.builtin.shell: |
    sudo install -m 0755 -d /etc/apt/keyrings
    curl -fsSL http://mirrors.aliyun.com/docker-ce/linux/ubuntu/gpg | sudo gpg --dearmor --yes -o /etc/apt/keyrings/docker.gpg
    sudo chmod a+r /etc/apt/keyrings/docker.gpg

    echo "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] http://mirrors.aliyun.com/docker-ce/linux/{{ ansible_facts["lsb"]["id"] | lower }} {{ ansible_facts["lsb"]["codename"] }} stable" | \
        sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
  args:
    executable: /bin/bash

- name: Update package source after installing docker repository
  tags: [ package, docker ]
  when: is_docker_exists.rc != 0
  include_tasks:
    file: roles/utils/pkg/tasks/package-source-update.yaml
    apply: { tags: [ "package", "docker" ] }

- name: Install docker packages
  tags: [ package, docker ]
  when: is_docker_exists.rc != 0
  package:
    name:
      - docker-ce
      - docker-ce-cli
      - containerd.io
      - docker-buildx-plugin
      - docker-compose-plugin

- name: Add user to docker group
  tags: docker
  user:
    name: "{{ansible_ssh_user}}"
    groups: 'docker'
    append: true

- name: Create docker daemon config folder
  tags: docker
  file:
    path: "/etc/docker"
    state: directory

- name: Create docker daemon config
  tags: docker
  template:
    src: "templates/docker-daemon.json.j2"
    dest: /etc/docker/daemon.json

- name: Restart docker daemon
  tags: docker
  systemd:
    name: docker
    state: restarted